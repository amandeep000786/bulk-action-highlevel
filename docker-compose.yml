version: '3.8'

services:
  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - crm-network

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmqBulk
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  app:
    container_name: crm-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - uploads-data:/usr/src/app/uploads
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/crmdb
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmqBulk
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - crm-network
    command: npm run dev

networks:
  crm-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
  uploads-data:
